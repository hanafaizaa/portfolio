# Metode Terbuka: Secant
root_secant <- function(f, x, tol=1e-7, N=100){
iter <- 0
xold <- x
fxold <- f(x)
x <- xold+10*tol
while(abs(x-xold)>tol){
iter <- iter+1
if(iter>N)
stop("No solutions found")
fx <- f(x)
xnew <- x - fx*((x-xold)/(fx-fxold))
xold <- x
fxold <- fx
x <- xnew
}
root<-xnew
return(list(`function`=f, root=root, iter=iter))
}
#contoh penerapan:
result_secant <- root_secant(function(x){x-exp(-x)}, x=0)
result_secant
result_secant <- root_secant(function(x){x^3 +x^2 -3*x - 3}, x=1)
result_secant
#plot
f=function(x){x - exp(-x)}
curve(f, from = 0, to = 1)
abline(h = 0, col="red", lty=2)
abline(v = 0.567, col="blue", lty=2)
f=function(x){x^3 +x^2 -3*x - 3}
curve(f, from = 0, to = 3)
abline(h = 0, col="red", lty=2)
abline(v = 1.73205, col="blue", lty=2)
#contoh
a = 4
b = 3
c = 7
f = function(x) {
a*x^2 - b*x - c
}
#Golden Section untuk nilai minimum
goldenMin <- function (f, a, b,tol = 0.0000001) {
ratio <- 2 / ( sqrt (5) +1)
x1 <- b - ratio * (b - a)
x2 <- a + ratio * (b - a)
f1 <- f(x1)
f2 <- f(x2)
while (abs (b - a) > tol ) {
if (f2 > f1) {
b <- x2
x2 <- x1
f2 <- f1
x1 <- b - ratio * (b - a)
f1 <- f(x1)
} else {
a <- x1
x1 <- x2
f1 <- f2
x2 <- a + ratio * (b - a)
f2 <- f(x2)
}
}
return ((a + b) / 2)
}
# domain over which we want to plot f(x) eg: -10 ≤ x ≤ 20:
x = -10:20
# plot f(x)
plot(x, f(x), type = 'l') # type = 'l' plots a line instead of points
# plot the x and y axes
abline(h = 0)
abline(v = 0)
resultMin <- goldenMin (f ,0 ,4)
resultMin
