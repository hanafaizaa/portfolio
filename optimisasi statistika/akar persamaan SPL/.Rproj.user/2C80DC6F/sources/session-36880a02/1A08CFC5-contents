# function to perform row operations
row_operation <- function(matrix, row1, row2, k) {
  matrix[row2, ] <- matrix[row2, ] + k * matrix[row1, ]
  return(matrix)
}

# function to find row echelon form
row_echelon_form <- function(matrix) {
  row_count <- nrow(matrix)
  column_count <- ncol(matrix)
  lead <- 1
  for (r in 1:row_count) {
    if (column_count <= lead)
      break
    i = r
    while (matrix[i, lead] == 0) {
      i = i + 1
      if (row_count == i) {
        i = r
        lead = lead + 1
        if (column_count == lead)
          break
      }
    }
    if (i != r) {
      matrix[c(r, i), ] <- matrix[c(i, r), ]
    }
    if (matrix[r, lead] != 0) {
      matrix[r, ] <- matrix[r, ] / matrix[r, lead]
      for (j in 1:(row_count)) {
        if (j != r)
          matrix <- row_operation(matrix, r, j, -matrix[j, lead])
      }
    }
    lead = lead + 1
  }
  return(matrix)
}

# function to solve system of linear equations using row echelon form
solve_linear_equations <- function(matrix) {
  row_count <- nrow(matrix)
  column_count <- ncol(matrix)
  solutions <- numeric(row_count)
  for (i in row_count:1) {
    solutions[i] <- matrix[i, column_count] / matrix[i, i]
    for (k in (i - 1):1)
      matrix[k, column_count] <- matrix[k, column_count] - matrix[k, i] * solutions[i]
  }
  return(solutions)
}

# example system of linear equations
matrix <- rbind(c(2, 1, -1, 8), c(-3, -1, 2, -11), c(-2, 1, 2, -3))

# find row echelon form
matrix <- row_echelon_form(matrix)

# solve system of linear equations
solutions <- solve_linear_equations(matrix)

# print solutions
print(solutions)
